name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Python (if you're using Python for testing)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest  # Install pytest for testing
        pip install -r requirements.txt  # Install dependencies from requirements.txt

    # Run tests
    - name: Run tests
      run: |
        pytest  # Replace with your testing command

  docker_build:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the successful completion of the 'build' job

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker Buildx (for building multi-architecture images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push the Docker image
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/blockhouse:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/blockhouse:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build  # This job depends on the successful completion of the 'docker_build' job

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Copy the private SSH key for EC2 access
    - name: Copy SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # SSH into EC2 and deploy the Docker container
    - name: SSH and deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/blockhouse:latest
          docker stop blockhouse || true
          docker rm blockhouse || true
          docker run -d --name blockhouse -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/blockhouse:latest
        EOF